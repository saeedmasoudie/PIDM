name: Build Windows Executable with Nuitka

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-2022

    steps:
      - name: üì• Checkout repository
        uses: actions/checkout@v4

      - name: üß∞ Install Visual Studio Build Tools
        uses: ilammy/msvc-dev-cmd@v1

      - name: üêç Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: üì¶ Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install nuitka

      - name: üì• Download FFmpeg
        shell: pwsh
        run: |
          mkdir -p bin
          $ffmpegUrl = "https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-essentials.zip"
          Invoke-WebRequest -Uri $ffmpegUrl -OutFile ffmpeg.zip
          7z x ffmpeg.zip -offmpeg_extracted
          Copy-Item "ffmpeg_extracted/ffmpeg-*/bin/ffmpeg.exe" -Destination "bin/ffmpeg.exe"
          Remove-Item ffmpeg.zip, ffmpeg_extracted -Recurse

      - name: üõ†Ô∏è Compile with Nuitka
        shell: cmd
        run: |
          python -m nuitka main.py ^
            --standalone ^
            --windows-console-mode=disable ^
            --enable-plugin=pyside6 ^
            --include-qt-plugins=imageformats,platforms,styles ^
            --nofollow-import-to=tkinter,test,pydoc ^
            --include-data-dir=assets=assets ^
            --include-data-dir=translations=translations ^
            --include-data-dir=bin=bin ^
            --windows-icon-from-ico=assets/icons/pidm_icon.ico ^
            --output-filename=PIDM ^
            --windows-company-name="PIDM" ^
            --windows-product-name="Python Internet Download Manager" ^
            --windows-file-version=1.2.0 ^
            --windows-product-version=1.2.0 ^
            --assume-yes-for-downloads ^
            --jobs=%NUMBER_OF_PROCESSORS% ^
            --jobs=2 ^
            --lto=no

      - name: ‚úÖ Verify Executable Exists
        shell: cmd
        run: |
          if not exist main.dist\PIDM.exe (
            echo ‚ùå PIDM.exe not found in main.dist. Build failed.
            dir main.dist
            exit 1
          ) else (
            echo ‚úÖ PIDM.exe found successfully.
          )

      - name: üì¶ Upload compiled build as artifact
        uses: actions/upload-artifact@v4
        with:
          name: PIDM-windows-build
          path: main.dist/